name: Java CI

on:
  push:
    branches:
      - main
  #   paths:
  #     - 'project-a/**'
  #     - 'project-b/**'
  #     - 'project-c/**'
  # pull_request:
  #   paths:
  #     - 'project-a/**'
  #     - 'project-b/**'
  #     - 'project-c/**'
#  workflow_dispatch:
jobs:
  build-project-a:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Build project-a
        run: mvn -B clean package --file project-a/pom.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORGANIZATION: malli-source
        with:
          args: >
          -Dsonar.coverage.jacoco.xmlReportPaths=project-a/target/site/jacoco/jacoco.xml
  # filter:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     project-a_changed: ${{ steps.filter.outputs.project-a }}
  #     project-b_changed: ${{ steps.filter.outputs.project-b }}
  #     project-c_changed: ${{ steps.filter.outputs.project-c }}
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
      # - name: Debug event
      #   run: |
      #     echo "event.before=$GITHUB_EVENT_BEFORE"
      #     echo "sha=$GITHUB_SHA"
      #     git diff --name-only $GITHUB_EVENT_BEFORE $GITHUB_SHA
  #     - name: Filter paths
  #       id: filter
  #       uses: dorny/paths-filter@v2
  #       with:
  #         filters: |
  #           project-a:
  #             - 'project-a/**'
  #           project-b:
  #             - 'project-b/**'
  #           project-c:
  #             - 'project-c/**'

  # build-project-a:
  #   needs: filter
  #   if: needs.filter.outputs.project-a_changed == 'true'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 17
  #     - name: Build project-a
  #       if: steps.detect.outputs.changed == 'true'
  #       run: mvn -B clean package --file project-a/pom.xml
  #     - name: Skip project-a build
  #       if: steps.detect.outputs.changed != 'true'
  #       run: echo "Skipping project-a build as no changes detected."

  # build-project-b: 
  #   needs: filter
  #   if: needs.filter.outputs.project-b_changed == 'true'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 17
  #     - name: Build project-b
  #       if: steps.detect.outputs.changed == 'true'
  #       run: mvn -B clean package --file project-b/pom.xml
  #     - name: Skip project-b build
  #       if: steps.detect.outputs.changed != 'true'
  #       run: echo "Skipping project-a build as no changes detected."

  # build-project-c:
  #   needs: filter
  #   if: needs.filter.outputs.project-c_changed == 'true'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 17
  #     - name: Build project-c
  #       if: steps.detect.outputs.changed == 'true'
  #       run: mvn -B clean package --file project-c/pom.xml
  #     - name: Skip project-c build
  #       if: steps.detect.outputs.changed != 'true'
  #       run: echo "Skipping project-a build as no changes detected."


